{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import\"./SmoothScroll\";import useWindowSize from'../useWindowSize';//\nimport{jsx as _jsx}from\"react/jsx-runtime\";var SmoothScroll=function SmoothScroll(_ref){var children=_ref.children;//Uses hook to get the window size of the website to \nvar windowSize=useWindowSize();var scrollContainerRef=useRef();//Transition time effect of the background when scrolling. \nvar data={ease:0.1,current:0,previous:0,rounded:0};useEffect(function(){setBodyHeight();},[windowSize.height]);var setBodyHeight=function setBodyHeight(){document.body.style.height=\"\".concat(scrollContainerRef.current.getBoundingClientRect().height,\"px\");};useEffect(function(){requestAnimationFrame(function(){return smoothScrollingHandler();});},[]);//constantly calculates the new y scroll position.\nvar smoothScrollingHandler=function smoothScrollingHandler(){data.current=window.scrollY;data.previous+=(data.current-data.previous)*data.ease;data.rounded=Math.round(data.previous*100)/100;scrollContainerRef.current.style.transform=\"translateY(-\".concat(data.previous,\"px)\");requestAnimationFrame(function(){return smoothScrollingHandler;});};return/*#__PURE__*/_jsx(\"div\",{className:\"parent\",children:/*#__PURE__*/_jsx(\"div\",{ref:scrollContainerRef,children:children})});};export default SmoothScroll;","map":{"version":3,"sources":["/Users/amolchagin/Desktop/Projects/dpearth.com/src/components/SmoothScroll/SmoothScroll.js"],"names":["React","useEffect","useRef","useWindowSize","SmoothScroll","children","windowSize","scrollContainerRef","data","ease","current","previous","rounded","setBodyHeight","height","document","body","style","getBoundingClientRect","requestAnimationFrame","smoothScrollingHandler","window","scrollY","Math","round","transform"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,KAAuC,OAAvC,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CAEI;2CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAiB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CAEtC;AACA,GAAMC,CAAAA,UAAU,CAAGH,aAAa,EAAhC,CAGA,GAAMI,CAAAA,kBAAkB,CAAGL,MAAM,EAAjC,CAEA;AACA,GAAMM,CAAAA,IAAI,CAAG,CACTC,IAAI,CAAE,GADG,CAETC,OAAO,CAAE,CAFA,CAGTC,QAAQ,CAAE,CAHD,CAITC,OAAO,CAAE,CAJA,CAAb,CASAX,SAAS,CAAC,UAAM,CAERY,aAAa,GAEpB,CAJQ,CAIN,CAACP,UAAU,CAACQ,MAAZ,CAJM,CAAT,CAMA,GAAMD,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,MAApB,WACIP,kBAAkB,CAACG,OAAnB,CAA2BQ,qBAA3B,GAAmDJ,MADvD,OAED,CAHH,CAKEb,SAAS,CAAC,UAAM,CACdkB,qBAAqB,CAAC,iBAAMC,CAAAA,sBAAsB,EAA5B,EAAD,CAArB,CACD,CAFQ,CAEN,EAFM,CAAT,CAKA;AACA,GAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnCZ,IAAI,CAACE,OAAL,CAAeW,MAAM,CAACC,OAAtB,CACAd,IAAI,CAACG,QAAL,EAAiB,CAACH,IAAI,CAACE,OAAL,CAAeF,IAAI,CAACG,QAArB,EAAiCH,IAAI,CAACC,IAAvD,CACAD,IAAI,CAACI,OAAL,CAAeW,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACG,QAAL,CAAgB,GAA3B,EAAkC,GAAjD,CAEAJ,kBAAkB,CAACG,OAAnB,CAA2BO,KAA3B,CAAiCQ,SAAjC,uBAA4DjB,IAAI,CAACG,QAAjE,QAGAQ,qBAAqB,CAAC,iBAAMC,CAAAA,sBAAN,EAAD,CAArB,CACD,CATD,CAWA,mBACE,YAAK,SAAS,CAAC,QAAf,uBACE,YAAK,GAAG,CAAEb,kBAAV,UAA+BF,QAA/B,EADF,EADF,CAOL,CArDG,CAuDJ,cAAeD,CAAAA,YAAf","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport \"./SmoothScroll\";\nimport useWindowSize from '../useWindowSize';\n\n    //\n    const SmoothScroll = ({ children }) =>{\n\n    //Uses hook to get the window size of the website to \n    const windowSize = useWindowSize();\n    \n    \n    const scrollContainerRef = useRef();\n    \n    //Transition time effect of the background when scrolling. \n    const data = {\n        ease: 0.1,\n        current: 0,\n        previous: 0,\n        rounded: 0,\n    };\n    \n\n\n    useEffect(() => {\n\n            setBodyHeight();\n\n    }, [windowSize.height]);\n\n    const setBodyHeight = () => {\n        document.body.style.height = `${\n            scrollContainerRef.current.getBoundingClientRect().height}px`;\n      };\n\n      useEffect(() => {\n        requestAnimationFrame(() => smoothScrollingHandler());\n      }, []);\n\n\n      //constantly calculates the new y scroll position.\n      const smoothScrollingHandler = () => {\n        data.current = window.scrollY;\n        data.previous += (data.current - data.previous) * data.ease;\n        data.rounded = Math.round(data.previous * 100) / 100;\n    \n        scrollContainerRef.current.style.transform = `translateY(-${data.previous}px)`;\n    \n        \n        requestAnimationFrame(() => smoothScrollingHandler);\n      };\n    \n      return (\n        <div className=\"parent\">\n          <div ref={scrollContainerRef}>{children}</div>\n        </div>\n      );\n\n\n};\n\nexport default SmoothScroll;"]},"metadata":{},"sourceType":"module"}