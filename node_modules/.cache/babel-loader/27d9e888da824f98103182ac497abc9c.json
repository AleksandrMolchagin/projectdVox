{"ast":null,"code":"var _jsxFileName = \"/Users/amolchagin/Desktop/Projects/dpearth.com/src/components/SmoothScroll/SmoothScroll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./SmoothScroll\";\nimport useWindowSize from '../useWindowSize'; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SmoothScroll = ({\n  children\n}) => {\n  _s();\n\n  //Uses hook to get the window size of the website to \n  const windowSize = useWindowSize();\n  const scrollContainerRef = useRef(); //Transition time effect of the background when scrolling. \n\n  const data = {\n    ease: 0.1,\n    current: 0,\n    previous: 0,\n    rounded: 0\n  };\n  useEffect(() => {\n    setBodyHeight();\n  }, [windowSize.height]);\n\n  const setBodyHeight = () => {\n    document.body.style.height = `${scrollContainerRef.current.getBoundingClientRect().height}px`;\n  };\n\n  useEffect(() => {\n    requestAnimationFrame(() => smoothScrollingHandler());\n  }, []); //constantly calculates the new y scroll position.\n\n  const smoothScrollingHandler = () => {\n    data.current = window.scrollY;\n    data.previous += (data.current - data.previous) * data.ease;\n    data.rounded = Math.round(data.previous * 100) / 100;\n    scrollContainerRef.current.style.transform = `translateY(-${data.previous}px)`;\n    requestAnimationFrame(() => smoothScrollingHandler);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollContainerRef,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SmoothScroll, \"Oy5qUibsoJk0swkM5BpJDDwQxOw=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = SmoothScroll;\nexport default SmoothScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmoothScroll\");","map":{"version":3,"sources":["/Users/amolchagin/Desktop/Projects/dpearth.com/src/components/SmoothScroll/SmoothScroll.js"],"names":["React","useEffect","useRef","useWindowSize","SmoothScroll","children","windowSize","scrollContainerRef","data","ease","current","previous","rounded","setBodyHeight","height","document","body","style","getBoundingClientRect","requestAnimationFrame","smoothScrollingHandler","window","scrollY","Math","round","transform"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CAEI;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAEtC;AACA,QAAMC,UAAU,GAAGH,aAAa,EAAhC;AAGA,QAAMI,kBAAkB,GAAGL,MAAM,EAAjC,CANsC,CAQtC;;AACA,QAAMM,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAE,GADG;AAETC,IAAAA,OAAO,EAAE,CAFA;AAGTC,IAAAA,QAAQ,EAAE,CAHD;AAITC,IAAAA,OAAO,EAAE;AAJA,GAAb;AASAX,EAAAA,SAAS,CAAC,MAAM;AAERY,IAAAA,aAAa;AAEpB,GAJQ,EAIN,CAACP,UAAU,CAACQ,MAAZ,CAJM,CAAT;;AAMA,QAAMD,aAAa,GAAG,MAAM;AACxBE,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,MAApB,GAA8B,GAC1BP,kBAAkB,CAACG,OAAnB,CAA2BQ,qBAA3B,GAAmDJ,MAAO,IAD9D;AAED,GAHH;;AAKEb,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,qBAAqB,CAAC,MAAMC,sBAAsB,EAA7B,CAArB;AACD,GAFQ,EAEN,EAFM,CAAT,CA7BoC,CAkCpC;;AACA,QAAMA,sBAAsB,GAAG,MAAM;AACnCZ,IAAAA,IAAI,CAACE,OAAL,GAAeW,MAAM,CAACC,OAAtB;AACAd,IAAAA,IAAI,CAACG,QAAL,IAAiB,CAACH,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACG,QAArB,IAAiCH,IAAI,CAACC,IAAvD;AACAD,IAAAA,IAAI,CAACI,OAAL,GAAeW,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACG,QAAL,GAAgB,GAA3B,IAAkC,GAAjD;AAEAJ,IAAAA,kBAAkB,CAACG,OAAnB,CAA2BO,KAA3B,CAAiCQ,SAAjC,GAA8C,eAAcjB,IAAI,CAACG,QAAS,KAA1E;AAGAQ,IAAAA,qBAAqB,CAAC,MAAMC,sBAAP,CAArB;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEb,kBAAV;AAAA,gBAA+BF;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOL,CArDG;;GAAMD,Y;UAGaD,a;;;KAHbC,Y;AAuDV,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport \"./SmoothScroll\";\nimport useWindowSize from '../useWindowSize';\n\n    //\n    const SmoothScroll = ({ children }) =>{\n\n    //Uses hook to get the window size of the website to \n    const windowSize = useWindowSize();\n    \n    \n    const scrollContainerRef = useRef();\n    \n    //Transition time effect of the background when scrolling. \n    const data = {\n        ease: 0.1,\n        current: 0,\n        previous: 0,\n        rounded: 0,\n    };\n    \n\n\n    useEffect(() => {\n\n            setBodyHeight();\n\n    }, [windowSize.height]);\n\n    const setBodyHeight = () => {\n        document.body.style.height = `${\n            scrollContainerRef.current.getBoundingClientRect().height}px`;\n      };\n\n      useEffect(() => {\n        requestAnimationFrame(() => smoothScrollingHandler());\n      }, []);\n\n\n      //constantly calculates the new y scroll position.\n      const smoothScrollingHandler = () => {\n        data.current = window.scrollY;\n        data.previous += (data.current - data.previous) * data.ease;\n        data.rounded = Math.round(data.previous * 100) / 100;\n    \n        scrollContainerRef.current.style.transform = `translateY(-${data.previous}px)`;\n    \n        \n        requestAnimationFrame(() => smoothScrollingHandler);\n      };\n    \n      return (\n        <div className=\"parent\">\n          <div ref={scrollContainerRef}>{children}</div>\n        </div>\n      );\n\n\n};\n\nexport default SmoothScroll;"]},"metadata":{},"sourceType":"module"}